<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

	<select id="list" parameterType="BoardListSearchVO" resultType="BoardListVO">
	select c.*, a.board_attachment_no from board_img a right outer join (
		select
             B.*,
             M.member_nick,
             M.member_badge
      from (
   select 
          board.*, 
            NVL(reply_cnt, 0) reply_cnt
      from (
    SELECT
        reply_board_no, 
        count(reply_no) reply_cnt 
    FROM reply
       GROUP BY reply_board_no
      ) reply right outer join board on reply.reply_board_no=board.board_no
      ) b inner join member M on B.board_id = M.member_id
	) c on a.board_no = c.board_no 
		<where>
			<if test="type != null and keyword !=''">
				and instr(${type},#{keyword})>0
			</if>
		</where>
		<if test = "sort != ''">
				order by ${sort}
		</if>
	</select>
	

	<insert id="insert" parameterType="BoardDto">
		insert into board(
		board_no,
		board_id,
		board_title,
		board_content)
		values(${boardNo},
		#{boardId},
		#{boardTitle},
		#{boardContent}
		)
	</insert>

	<delete id="delete" parameterType="int">
		delete board where
		board_no=#{boardNo}
	</delete>


	<update id="edit" parameterType="BoardDto">
		update board
		set
		board_title=#{boardTitle},
		board_content=#{boardContent},
		board_edittime=sysdate
		where
		board_no = #{boardNo}
	</update>

<!-- 게시글 작성하면 포인트 업데이트 -->
	<update id="updatePoint"  parameterType="MemberDto">
		update member set member_point = member_point + #{memberPoint}
		where member_id = #{memberId}
  </update>  
  
  <!-- 게시글 삭제하면 포인트 down -->
  <update id="deletePoint"  parameterType="MemberDto">
		update member set member_point = member_point - #{memberPoint}
		where member_id = #{memberId}
  </update>  
  
  <!-- 오늘 하루 게시글 insert 카운트  -->
  	<select id="boardCNT" parameterType="MemberDto" resultType="int">
 	 	select count(*) from board where board_id=#{memberId} and to_date(board_writetime, 'yy/mm/dd')=to_date(sysdate, 'yy/mm/dd')
  	</select>

<!--오늘 하루 댓글 수 카운트 -->
	<select id="replyCNT" parameterType="MemberDto" resultType="int">
		select count(*) from reply where reply_id=#{memberId} and to_date(reply_writetime, 'yy/mm/dd')=to_date(sysdate, 'yy/mm/dd')
	</select>
	
	<select id="detail" parameterType="int" resultType="BoardListVO">
		select
	  		  B.*,
  	 		 M.member_nick,
   			 M.member_badge
		from (
	select 
    		board.*, 
   			NVL(reply_cnt, 0) reply_cnt
		from (
    SELECT
        reply_board_no, 
        count(reply_no) reply_cnt 
    FROM reply
   	 GROUP BY reply_board_no
		) reply right outer join board on reply.reply_board_no=board.board_no
		) B inner join member M on B.board_id = M.member_id
        where board_no=#{boardNo}
	</select>

	<!-- 조회수 증가 처리 -->
	<update id="plusReadCount">
		update board set board_click=board_click+1
		where board_no=#{boardNo}
	</update>
	
	<!-- 유저게시판에 공지사항 3개 출력 구문 -->
	<select id="noticelist" resultType="NoticeDto">
	
		select * from (
		    select tmp.*, rownum rn from(
		        select notice_no,notice_title from notice order by notice_no desc
		    ) tmp
		) where rn between 1 and 3
	</select>
	
	 <!-- 좋아요 업데이트 -->
   <update id="likeUp">
   	update board set board_like= board_like+1 where board_no = #{boardNo}
   </update>
   
   <update id="likeDown">
   	update board set board_like= board_like-1 where board_no = #{boardNo}
   </update>
   
   <!-- 좋아요한 글이 있는지 조회 -->
   <select id="selectBoardLike" parameterType="BoardLikeDto" resultType="BoardLikeDto">
		select * from board_like where board_like_no = #{boardLikeNo} and board_like_id = #{boardLikeId}
   </select>
   
   <!-- 좋아요 정보 등록 -->
   <insert id="addBoardLike" parameterType="BoardLikeDto">
		insert into board_like values(#{boardLikeNo}, #{boardLikeId}, sysdate)
   </insert>
   
   <!-- 좋아요 정보 삭제 -->
   <delete id="removeBoardLike" parameterType="BoardLikeDto">
		delete board_like where board_like_no = #{boardLikeNo} and board_like_id = #{boardLikeId}
   </delete>
   
   <!-- 좋아요 개수 출력 -->
   <select id="countLike" parameterType="int" resultType="int">
		select board_like from board where board_no = #{boardNo}
   </select>
	
	
	
	

</mapper>