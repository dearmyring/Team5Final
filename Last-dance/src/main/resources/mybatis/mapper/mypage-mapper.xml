<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mypage">
	<!-- 유저 정보 -->
	<select id="userInfo" parameterType="String" resultType="MemberDto">
		select * from member where member_id = #{memberId}
	</select>
	
	<!-- 최근 본 레시피 리스트 -->
	<select id="viewList" parameterType="String" resultMap="recipeList">
		select R.* from recipe R 
		inner join recipe_view RV on R.recipe_no = RV.recipe_view_no where RV.recipe_view_id = #{memberId} 
		order by RV.recipe_view_time desc
	</select>
	
	<!-- 재료 출력 -->
	<select id="recipeIngredientList" resultType="RecipeIngredientDto" parameterType="int">
		select * from recipe_ingredient where recipe_no = #{recipeNo}
	</select>
	
	<!-- 썸네일 이미지 출력 -->
	<select id="recipeImg" parameterType="int" resultType="RecipeImgDto">
		select * from recipe_img where recipe_no = #{recipeNo}
	</select>
	
	<!-- 레시피 리스트 계층형 조회 구문 -->
	<resultMap type="RecipeListVO" id="recipeList">
		<association property="recipeDto">
			<result column="recipe_no" property="recipeNo"/>
			<result column="recipe_nick" property="recipeNick"/>
			<result column="recipe_title" property="recipeTitle"/>
			<result column="recipe_info" property="recipeInfo"/>
			<result column="recipe_time" property="recipeTime"/>
			<result column="recipe_click" property="recipeClick"/>
			<result column="recipe_like" property="recipeLike"/>
			<result column="recipe_hashtag" property="recipeHashtag"/>
			<result column="recipe_writetime" property="recipeWritetime" javaType="java.sql.Date"/>
			<result column="recipe_edittime" property="recipeEdittime" javaType="java.sql.Date"/>
			<result column="recipe_difficulty" property="recipeDifficulty"/>
		</association>
		
		<collection property="recipeIngredientList" javaType="java.util.List" ofType="RecipeIngredientDto" select="recipeIngredientList" column="recipe_no">
			<result column="recipe_ingredient_name" property="recipeIngredientName"/>		
			<result column="recipe_no" property="recipeNo"/>		
		</collection>
		
		<collection property="recipeImgList" javaType="java.util.List" ofType="RecipeImgDto" select="recipeImg" column="recipe_no">
			<result column="recipe_attachment_no" property="recipeAttachmentNo"/>
			<result column="recipe_no" property="recipeNo"/>
		</collection>
		
	</resultMap>
	
	<!-- 좋아요 한 레시피 리스트 -->
	<select id="likeRecipeList" resultMap="recipeList" parameterType="String">
		select R.* from recipe R 
		inner join recipe_like RL on R.recipe_no = RL.recipe_like_no 
		where RL.recipe_like_id = #{memberId} 
		order by RL.recipe_like_time desc
	</select>
	
	<!-- 내가 쓴 글 리스트 -->
	<select id="myRrite" parameterType="String" resultType="BoardDto">
		select * from board where board_id = #{memberId} order by board_writetime desc
	</select>
	
	<!-- 내가 좋아요 한 글 카운트 -->
	<select id="myLikeListCount" parameterType="String" resultType="int">
		select count(*) LIKECOUNT from recipe where recipe_no in (select recipe_like_no from recipe_like where recipe_like_id = #{memberId})
	</select>
	
	<!-- 내가 쓴 글 카운트 -->
	<select id="myWriteCount" parameterType="String" resultType="int">
		select count(*) MYWRITE from board where board_id = #{memberId}
	</select>
	
	<!-- 내가 본 레시피 카운트 -->
	<select id="readRecipeCount" parameterType="String" resultType="int">
		select count(*) READRECIPE from recipe where recipe_no in (select recipe_view_no from recipe_view where recipe_view_id = #{memberId})
	</select>
	
	<!-- 비밀번호 확인 -->
	<select id="pwConfirm" parameterType="String" resultType="MemberDto">
		select member_pw from member where member_id = #{memberId}
	</select>
	
	<!-- 회원정보 수정(비밀번호 포함) -->
	<update id="editInfo" parameterType="MemberDto">
		update member set member_pw = #{memberPw}, member_nick = #{memberNick}, 
		member_gender = #{memberGender}, member_phone = #{memberPhone} 
		where member_id = #{memberId}
	</update>
	
	<!-- 회원정보 수정(비밀번호 미포함) -->
	<update id="editInfo2" parameterType="MemberDto">
		update member set member_phone=#{memberPhone}, member_nick=#{memberNick}, 
		member_gender=#{memberGender} where member_id =#{memberId}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="memberWithdrawal" parameterType="String">
		delete member where member_id = #{memberId}
	</delete>
	
	<!-- 프로필 사진 출력 -->
	<select id="profileImg" parameterType="String" resultType="AttachmentDto">
		 
		<!-- select profile_attachment_no from profile_img where profile_id = #{memberId} -->
		 
		 <!-- select P.profile_attachment_no from 
		 member M left outer join profile_img P on M.member_id = P.profile_id where M.member_id = #{memberId} -->
		 
		 select * from attachment A inner join profile_img P on A.attachment_no = P.profile_attachment_no where P.profile_id = #{memberId}
	</select>
	
	<!-- 프로필 사진 등록 -->
	<insert id="addProfileImage" parameterType="ProfileImageDto">
		insert into profile_img values(#{profileId}, #{profileAttachmentNo}, sysdate)
	</insert>
	
	<!-- 프로필 사진이 있을경우 수정 -->
	<update id="edtiProfileImage" parameterType="ProfileImageDto">
		update profile_img set profile_attachment_no = #{profileAttachmentNo} where profile_id = #{profileId}
	</update>
	
	
</mapper>